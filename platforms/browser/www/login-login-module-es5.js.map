{"version":3,"sources":["src/app/login/login.page.html","src/app/login/login.module.ts","src/app/login/login.page.scss","src/app/login/login.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>Login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n    <div class=\\\"ion-list\\\">\\n        <br>\\n        <br>\\n      <ion-item>\\n        <ion-label  position=\\\"floating\\\">\\n         Enter E-mail\\n        </ion-label>\\n        <ion-input type=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <br>\\n      <!-- <ion-item>\\n          <ion-label  position=\\\"floating\\\">\\n              Password\\n             </ion-label>\\n             <ion-input type=\\\"password\\\" [(ngModel)]=\\\"pass\\\"></ion-input>\\n      </ion-item> -->\\n    </div>\\n    <br>\\n    <br>\\n    <br>\\n    <br>\\n  <ion-button  shape=round class=\\\"buttons\\\" size=large  fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"dark\\\" (click)=login()  style=\\\"width: 50%;margin-right:25%;margin-left:25%\\\" >Login</ion-button>\\n  <br>\\n    <br>\\n    <br>\\n    <br>\\n  <ion-button  shape=round class=\\\"buttons\\\" size=large  fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"dark\\\" (click)=dash()  style=\\\"width: 50%;margin-right:25%;margin-left:25%\\\" >Add Vehicle</ion-button> \\n</ion-content>\\n  \"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".buttons {\\n  width: 40%;\\n  font-size: 18px;\\n}\\n\\nion-title {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXFNFTThcXHAzL3NyY1xcYXBwXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxVQUFBO0VBRUEsZUFBQTtBQ0RKOztBRElBO0VBRUksa0JBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b25zXHJcbntcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIFxyXG59XHJcbmlvbi10aXRsZXtcclxuICAgIFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiIsIi5idXR0b25zIHtcbiAgd2lkdGg6IDQwJTtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG5pb24tdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { AlertController } from '@ionic/angular';\nimport { RegserviceService } from '../register/regservice.service';\nimport UserResponse from '../message';\nimport {Storage} from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\n\nexport class LoginPage implements OnInit, UserResponse {\n\n  email = '';\n  message: any;\n\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    public alerCtrl: AlertController,\n    private regServ: RegserviceService,\n    private storage:Storage\n    ) { }\n\n  ngOnInit() {\n\n  }\n  dash() {\n    this.router.navigateByUrl('/addvehicle');\n  }\n  login() {\n\n    const email =  this.email;\n    if (email.length == 0) {\n      this.doAlert('Enter Valid Email!', 'Okay');\n    } else {\n      this.regServ.setEmail(email);\n      this.http.post<{name:string,phone:number}>('https://mywash.herokuapp.com/profile/userdetails',{email:email}).subscribe((result)=>{\n      console.log(result.phone);\n      console.log(result.name);\n      this.storage.set('num',result.phone);\n      this.storage.set('name',result.name);\n\n      });\n      \n     this.storage.set('email',this.email);\n     \n     const data = {\n        email: this.regServ.getEmail()\n      };\n\n\n      //check is user already logged in then route directly to dash else to registration pages\n      console.log(data);\n      this.http.post('https://mywash.herokuapp.com/loginotp', data).subscribe(\n        ( result: UserResponse) => \n          {\n          console.log(result);\n          if (result.message == true) {\n            this.router.navigateByUrl('/registernew');\n            this.storage.set('activity','loggedin').then((data)=>{\n            console.log(data);\n\n            });\n            \n          } else {\n            this.doAlert('Not Registered', 'Register Now');\n            this.router.navigateByUrl('/register');\n          }\n        },\n        error => {\n          console.log(error);\n        });\n    }\n  }\n  /*async login()\n   {\n     const options={\n       email: this.username,\n       password: this.pass\n     };\n\n     try {\n       this.http.post('https://mywash.herokuapp.com/auth', options).subscribe(\n         result => {\n\n         if (result == \"user doesn't exist\") {\n           this.doAlert( \"Username Incorrect\" , \"Retype\" );\n   } else if(result == 'wrong password') {\n           this.doAlert( 'Password Incorrect' , 'Retype' );\n    } else {\n     this.router.navigateByUrl('/dash');\n     }\n\n       },\n       error => {\n         this.doAlert('HELLO ERROR','OKAY');\n       });\n\n     } catch (err) {\n       console.dir(err)\n     }\n   }*/\n  async doAlert(msg: string, btn: string) {\n    const alert = await this.alerCtrl.create({\n      header: 'Error',\n      message: msg,\n      buttons: [btn],\n    });\n\n\n    await alert.present();\n    if (alert.message == 'Enter valid Number') {\n      this.email = '';\n    }\n\n  }\n  \n\n}\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}