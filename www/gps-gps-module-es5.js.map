{"version":3,"sources":["src/app/gps/gps.page.html","src/app/gps/gps.module.ts","src/app/gps/gps.page.scss","src/app/gps/gps.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Home</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    \\n\\n \\n\\n  <ion-button (click)=startTracking() *ngIf=\\\"!isTracking\\\">\\n    <ion-icon name=\\\"locate\\\"></ion-icon>\\n    Start Tracking\\n  </ion-button>\\n\\n  <ion-button (click)=stopTracking() *ngIf=\\\"isTracking\\\">\\n    <ion-icon name=\\\"hand\\\"></ion-icon>\\n    Stop Tracking\\n  </ion-button>\\n  <div class=\\\"map\\\" #map  style=\\\" width: 100%;\\n  height: 300px\\\"></div>\\n\\n<ion-list>\\n  <ion-list-header>Previous Tracks</ion-list-header>\\n  <ion-item *ngFor=\\\"let route of previousTracks\\\">\\n    {{ route.finished | date }}, {{ route.path.length }} Waypoints\\n    <ion-button  (click)=\\\"showHistoryRoute(route.path)\\\">View Route</ion-button>\\n  </ion-item>\\n</ion-list>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GpsPage } from './gps.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GpsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [GpsPage]\n})\nexport class GpsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dwcy9ncHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit,ViewChild, AfterViewInit} from '@angular/core';\nimport { NavController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs/Subscription';\nimport { filter } from 'rxjs/operators';\nimport { Storage } from '@ionic/storage';\nimport { ElementRef } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n\ndeclare var google;\n\n@Component({\n  selector: 'app-gps',\n  templateUrl: './gps.page.html',\n  styleUrls: ['./gps.page.scss'],\n})\nexport class GpsPage implements OnInit,AfterViewInit {\n\n \n \n  @ViewChild('map',{static:false}) mapEle:ElementRef; \n    map: any;\n  currentMapTrack = null;\n \n  isTracking = false;\n  trackedRoute = [];\n  previousTracks = [];\n \n  positionSubscription: Subscription;\n \n  constructor(\n    public navCtrl: NavController, \n    private plt: Platform, \n    public geolocation: Geolocation,\n    private storage: Storage) {}\n  \n    \n  \n    ngOnInit()\n  {\n    console.log(\"BYE\");\n    this.plt.ready().then(() => {\n     // this.loadHistoricRoutes();\n \n      let mapOptions = {\n        zoom: 13,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        mapTypeControl: false,\n        streetViewControl: false,\n        fullscreenControl: false,\n      };\n      this.map = new google.maps.Map(this.mapEle.nativeElement, mapOptions);\n      \n     \n      this.geolocation.getCurrentPosition().then((pos) => {\n        let latLng = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\n        this.map.setCenter(latLng);\n        this.map.setZoom(15);\n      })\n    \n      });\n  }\n\n  ngAfterViewInit() {\n    \n   \n  }\n\n  \n  // startTracking()\n  //   {\n  //     this.isTracking = true;\n  //     this.trackedRoute = [];\n   \n  //     let watch = this.geolocation.watchPosition();\n  //     watch.subscribe((data) => {\n  //         setTimeout(() => {\n  //           this.trackedRoute.push({ lat: data.coords.latitude, lng: data.coords.longitude });\n  //           this.redrawPath(this.trackedRoute);\n  //         }, 0);\n  //       });\n   \n  //   }\n   \n  //   redrawPath(path) {\n  //     if (this.currentMapTrack) {\n  //       this.currentMapTrack.setMap(null);\n  //     }\n   \n  //     if (path.length > 1) {\n  //       this.currentMapTrack = new google.maps.Polyline({\n  //         path: path,\n  //         geodesic: true,\n  //         strokeColor: '#ff00ff',\n  //         strokeOpacity: 1.0,\n  //         strokeWeight: 3\n  //       });\n  //       this.currentMapTrack.setMap(this.map);\n  //     }\n  //   }\n\n  //   stopTracking() {\n  //     let newRoute = { finished: new Date().getTime(), path: this.trackedRoute };\n  //     this.previousTracks.push(newRoute);\n  //     this.storage.set('routes', this.previousTracks);\n     \n  //     this.isTracking = false;\n  //     this.positionSubscription.unsubscribe();\n  //     this.currentMapTrack.setMap(null);\n  //   }\n     \n  //   showHistoryRoute(route) {\n  //     this.redrawPath(route);\n  //   }\n  \n  \n  //   loadHistoricRoutes() {\n  //     this.storage.get('routes').then(data => {\n  //       if (data) {\n  //         this.previousTracks = data;\n  //       }\n  //     });\n  //   } \n\n\n}\n"],"sourceRoot":"webpack:///","file":"gps-gps-module-es5.js"}